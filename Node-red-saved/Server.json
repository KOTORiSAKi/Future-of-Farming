[
    {
        "id": "2e2e8b1c0774663a",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "49f4a7dbee841bc4",
        "type": "mqtt in",
        "z": "2e2e8b1c0774663a",
        "name": "",
        "topic": "esp32/output",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "7bf5f96dafd79465",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 80,
        "wires": [
            [
                "cacfbd8acb751c7e",
                "1a67458d65abe5fa",
                "b2bde713b3024977"
            ]
        ]
    },
    {
        "id": "d29f1492d27d9a8c",
        "type": "join",
        "z": "2e2e8b1c0774663a",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 630,
        "y": 80,
        "wires": [
            [
                "ea9b9939be28cff6",
                "b1c453375c0f2ef9"
            ]
        ]
    },
    {
        "id": "b2bde713b3024977",
        "type": "function",
        "z": "2e2e8b1c0774663a",
        "name": "Temp",
        "func": "let tempMsg = {\n    topic: \"temp\",\n    payload: msg.payload.temp\n};\nreturn tempMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 100,
        "wires": [
            [
                "d29f1492d27d9a8c"
            ]
        ]
    },
    {
        "id": "cacfbd8acb751c7e",
        "type": "function",
        "z": "2e2e8b1c0774663a",
        "name": "Humid",
        "func": "let humidMsg = {\n    topic: \"humid\",\n    payload: msg.payload.humid\n};\nreturn humidMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "d29f1492d27d9a8c"
            ]
        ]
    },
    {
        "id": "b1c453375c0f2ef9",
        "type": "debug",
        "z": "2e2e8b1c0774663a",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 80,
        "wires": []
    },
    {
        "id": "a073ac72601f58a0",
        "type": "function",
        "z": "2e2e8b1c0774663a",
        "name": "function 1",
        "func": "// รับข้อมูลจาก payload\nconst timestamp = msg.payload.timestamp;\nconst temp = msg.payload.temp;\nconst humid = msg.payload.humid;\n\n// สร้างคำสั่ง SQL ที่ถูกต้อง\n// ไม่ต้องระบุคอลัมน์ id ในคำสั่ง INSERT เพราะฐานข้อมูลจะจัดการให้เอง\n//const sql = 'INSERT INTO iotsensors (timestamp, temp, humid) VALUES ('${timestamp}', ${temp}, ${humid})';\nconst sql = `INSERT INTO iotsensors (timestamp, temp, humid) VALUES ('${timestamp}', ${temp}, ${humid})`;\n// กำหนดคำสั่ง SQL ให้กับ msg.topic เพื่อส่งไปที่โหนด sqlite\nmsg.topic = sql;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "26188e4f3003ab9d",
        "type": "function",
        "z": "2e2e8b1c0774663a",
        "name": "timestamp",
        "func": "let timestampMsg = {\n    topic: \"timestamp\",\n    payload: Date.now()\n};\nreturn timestampMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c6a3b16c57433591",
        "type": "inject",
        "z": "2e2e8b1c0774663a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "25fe2fa646f260a2"
            ]
        ]
    },
    {
        "id": "c417c38fdd0067ff",
        "type": "debug",
        "z": "2e2e8b1c0774663a",
        "name": "Read From DB",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 360,
        "wires": []
    },
    {
        "id": "cd77153b6aaef3d2",
        "type": "inject",
        "z": "2e2e8b1c0774663a",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "iso",
        "payloadType": "date",
        "x": 130,
        "y": 420,
        "wires": [
            [
                "25fe2fa646f260a2"
            ]
        ]
    },
    {
        "id": "25fe2fa646f260a2",
        "type": "template",
        "z": "2e2e8b1c0774663a",
        "name": "read",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "SELECT * FROM iotsensors;",
        "output": "str",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "4cc8013a3a6e6117"
            ]
        ]
    },
    {
        "id": "6c67237ca75ff3f9",
        "type": "sqlite",
        "z": "2e2e8b1c0774663a",
        "mydb": "5d8bb6bbe6585ad6",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 840,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "4cc8013a3a6e6117",
        "type": "sqlite",
        "z": "2e2e8b1c0774663a",
        "mydb": "5d8bb6bbe6585ad6",
        "sqlquery": "msg.topic",
        "sql": "SELECT timestamp, temperature AS temp, humidity AS humid FROM sensor_data ORDER BY timestamp DESC LIMIT 10;",
        "name": "",
        "x": 460,
        "y": 380,
        "wires": [
            [
                "c417c38fdd0067ff",
                "4076b7cc077be463"
            ]
        ]
    },
    {
        "id": "4076b7cc077be463",
        "type": "ui_template",
        "z": "2e2e8b1c0774663a",
        "group": "d17eae550171b1e0",
        "name": "",
        "order": 0,
        "width": "16",
        "height": "10",
        "format": "<style>\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    font-family: Arial, sans-serif;\n  }\n\n  th,\n  td {\n    border: 1px solid #ddd;\n    padding: 10px;\n    text-align: left;\n  }\n\n  th {\n    background-color: #D32F2F;\n    color: white;\n  }\n\n  tr:nth-child(even) {\n    background-color: #FFEBEE;\n  }\n\n  tr:hover {\n    background-color: #FFCDD2;\n  }\n</style>\n\n<table>\n  <tr>\n    <th>timestamp</th>\n    <th>temp</th>\n    <th>humid</th>\n  </tr>\n  <tr ng-repeat=\"x in (msg.payload | orderBy:'timestamp' | limitTo:99999999)\">\n    <td>{{x.timestamp}}</td>\n    <td>{{x.temp}}</td>\n    <td>{{x.humid}}</td>\n  </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 720,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ed4da50fb83e0827",
        "type": "sqlite",
        "z": "2e2e8b1c0774663a",
        "mydb": "c454a927bc66584d",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 720,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "018eeeb5de33ad9b",
        "type": "template",
        "z": "2e2e8b1c0774663a",
        "name": "Create a table",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "create table\n    iotsensors(\n        id integer primary key,\n        timestamp string,\n        temp string,\n        humid string\n)\n;",
        "output": "str",
        "x": 340,
        "y": 540,
        "wires": [
            [
                "ed4da50fb83e0827"
            ]
        ]
    },
    {
        "id": "8013e39a3b7a9f86",
        "type": "template",
        "z": "2e2e8b1c0774663a",
        "name": "Drop a table",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "drop table\n    iotsensors;",
        "output": "str",
        "x": 330,
        "y": 600,
        "wires": [
            [
                "ed4da50fb83e0827"
            ]
        ]
    },
    {
        "id": "cfb0b42964636722",
        "type": "inject",
        "z": "2e2e8b1c0774663a",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "018eeeb5de33ad9b"
            ]
        ]
    },
    {
        "id": "fe68a5c4bbeb81b4",
        "type": "inject",
        "z": "2e2e8b1c0774663a",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "8013e39a3b7a9f86"
            ]
        ]
    },
    {
        "id": "ea9b9939be28cff6",
        "type": "template",
        "z": "2e2e8b1c0774663a",
        "name": "",
        "field": "topic",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "insert into\niotsensors(\n    timestamp,\n    temp,\n    humid\n)\n\nvalues(\n    \"{{payload.timestamp}}\",\n    \"{{payload.temp}}\",\n    \"{{payload.humid}}\"\n);",
        "output": "str",
        "x": 560,
        "y": 260,
        "wires": [
            [
                "6c67237ca75ff3f9"
            ]
        ]
    },
    {
        "id": "1a67458d65abe5fa",
        "type": "moment",
        "z": "2e2e8b1c0774663a",
        "name": "",
        "topic": "timestamp",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Bangkok",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD HH:mm:ss",
        "locale": "th_TH",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Bangkok",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "d29f1492d27d9a8c"
            ]
        ]
    },
    {
        "id": "7bf5f96dafd79465",
        "type": "mqtt-broker",
        "name": "esp32/button",
        "broker": "mqtt://192.168.137.191",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5d8bb6bbe6585ad6",
        "type": "sqlitedb",
        "db": "/home/saki/Desktop/Project_IoT/data.db",
        "mode": "RWC"
    },
    {
        "id": "d17eae550171b1e0",
        "type": "ui_group",
        "name": "Real-time Sensors Monitoring",
        "tab": "96b11a4828d45f5d",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c454a927bc66584d",
        "type": "sqlitedb",
        "db": "/home/saki/Desktop/Project_IoT/data.db",
        "mode": "RWC"
    },
    {
        "id": "96b11a4828d45f5d",
        "type": "ui_tab",
        "name": "IoTsensors",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "09ca63ec85825197",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-node-sqlite": "1.1.1",
            "node-red-dashboard": "3.6.6",
            "node-red-contrib-moment": "5.0.0"
        }
    }
]